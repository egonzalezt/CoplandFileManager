name: Publish Docker image

on:
  push:
    branches:
      - develop
env:
  IMAGE: coplandfilemanager
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  DEPLOYMENT_NAME: coplandfilemanager
  IMAGE_NAME: coplandfilemanager
jobs:
  generate-version:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    outputs:
      new_tag: ${{ steps.bump-version.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: Bump version and push tag
        id: bump-version
        uses: anothrNick/github-tag-action@1.64.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: false
          MAJOR_STRING_TOKEN: "release("
          MINOR_STRING_TOKEN: "feat("
          PATCH_STRING_TOKEN: "fix("
          DEFAULT_BUMP: minor
  setup-build-publish-deploy:
    needs: generate-version
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
  
      - name: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: Get GKE Credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ secrets.CLUSTER }}
          location: ${{ secrets.CLUSTER_ZONE }}
  
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN  }}
      - name: Build Coplan File Manager and publish to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./CoplandFileManager/Dockerfile
          push: true
          tags: egonzalezt/coplandfilemanager:latest, egonzalezt/${{ env.IMAGE_NAME }}:${{ needs.generate-version.outputs.new_tag }}
  
      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |-
          kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} coplandfilemanager=egonzalezt/${{ env.IMAGE_NAME }}:${{ needs.generate-version.outputs.new_tag }}
          kubectl rollout status deployment/coplandfilemanager
      - name: Check deployment success
        run: |
          while [[ $(kubectl get deployment/coplandfilemanager -o 'jsonpath={..status.conditions[?(@.type=="Available")].status}') != "True" ]]; do sleep 5; done
          while [[ $(kubectl get pods -l app=coplandfilemanager -o 'jsonpath={..status.conditions[?(@.type=="Ready")].status}') != "True" ]]; do sleep 5; done