name: Publish Docker image

on:
  push:
    branches:
      - develop

jobs:
  generate-version:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    outputs:
      new_tag: ${{ steps.bump-version.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: Bump version and push tag
        id: bump-version
        uses: anothrNick/github-tag-action@1.64.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: false
          MAJOR_STRING_TOKEN: "release("
          MINOR_STRING_TOKEN: "feat("
          PATCH_STRING_TOKEN: "fix("
          DEFAULT_BUMP: minor
          
  build-and-publish:
    needs: generate-version
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN  }}
      - name: Build AE3803 and publish to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./CoplandFileManager/Dockerfile
          push: true
          tags: egonzalezt/coplandfilemanager:latest, egonzalezt/coplandfilemanager:${{ needs.generate-version.outputs.new_tag }}
      - name: 'Obtain access token by using workload identity federation'
        uses: 'google-github-actions/auth@v0'
        with:
          create_credentials_file: true
          token_format: access_token
          workload_identity_provider: projects/${{ secrets.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-actions/providers/github-actions-oidc
          service_account: github-actions-workflow@${{ secrets.PROJECT_ID }}.iam.gserviceaccount.com
      - name: Lock image version in deployment.yaml
        run: sed -i 's|CLOUD_IMAGE_TAG|${{ needs.generate-version.outputs.new_tag }}|g' ./deployment/deployment.yaml
      - name: Connect to GKE
        uses: google-github-actions/get-gke-credentials@v0
        with:
          cluster_name: ${{ secrets.CLUSTER }}
          location: ${{ secrets.CLUSTER_ZONE }}
      - name: Deploy to GKE
        run: kubectl apply -f ./deployment/deployment.yaml